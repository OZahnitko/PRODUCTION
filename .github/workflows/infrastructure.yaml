name: Multi-21, Seb
on:
  push:
    branches:
      - main
      - staging
  pull_request:

jobs:
  terraform:
    name: Terraform infrastructure
    if: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/staging' || github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    environment: PRODUCTION
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false

      - name: Format Terraform configuration
        working-directory: ./terraform
        run: terraform fmt

      - name: Initialize Terraform
        working-directory: ./terraform
        run: terraform init

      - name: Validate Terraform configuration
        working-directory: ./terraform
        run: terraform validate

      - name: Select STAGING workspace
        id: staging_plan
        if: ${{ github.ref == 'refs/heads/staging' && github.event_name == 'push' }}
        working-directory: ./terraform
        run: terraform workspace select staging

      - name: Select PRODUCTION workspace
        if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
        working-directory: ./terraform
        run: terraform workspace select production

      - name: Plan Terraform configuration
        working-directory: ./terraform
        run: terraform plan -no-color

      - uses: actions/github-script@0.9.0
        if: ${{ github.event_name == 'pull_request' }}
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Apply Terraform configuration
        working-directory: ./terraform
        run: terraform apply -auto-approve
